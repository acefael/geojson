
#
# Copyright (c) 2016 acefael
#

_package sw
$

_pragma(classify_level=advanced, topic={GEOJSON})
_method rwo_record.as_geojson( _optional out_stream )

	## serialises _self in geojson format onto out_stream.
	##
	## out_stream defaults to !output!

	_local out << out_stream.default(!output!)

	_constant COMMA << %,

	_local astr << _proc(str) >> write_string( %" , str , %" ) _endproc
	_local wany << _proc(_gather any)
			       _import out
			       _for elm _over any.elements()
			       _loop
				       out.write(elm)
			       _endloop
		       _endproc

	_local not_first? << _false

	wany( %{,astr("type"),%:,astr("Feature"),COMMA,astr("properties"),%:,%{)
	_for f _over _self.visible_fields().elements()
	_loop
		# TODO what to do with join fields
		_if f.is_join?
		_then
			_continue _endif
		# geometry handled further down
		_if f.is_geometry?
		_then
			_continue _endif
		_if not_first?
		_then
			wany(COMMA) _endif
		not_first? << _true

		wany(astr(f.external_name))
		wany(%:)
		wany(astr(_self.perform(f.name)))
	_endloop

	wany(%})

	# determine names of json-able geometry fields, to be able to
	# tell if there are any, and to print them
	_local geometry_field_names << rope.new()
	_for f _over _self.visible_fields().fast_elements()
	_loop
		_if f.is_geometry? _andif
		    _self.perform(f.name).responds_to?( :|as_geojson()| )
		_then
			geometry_field_names.add( f.name )
		_endif
	_endloop

	_if _not geometry_field_names.empty?
	_then
		wany(COMMA)

		wany(astr("geometry"),":")
		wany("{")
		wany(astr("type"),":",astr("GeometryCollection"))
		wany(COMMA)
		wany(astr("geometries"),":","[")
		not_first? << _false

		# writing an unit_value with c-c-s set seems to produce errors,
		# so setting it only here.
		_dynamic !current_coordinate_system!
		!current_coordinate_system! << geojson.output_coordinate_system

		_for f _over geometry_field_names.fast_elements()
		_loop
			_if not_first? _then wany(COMMA) _endif
			_self.perform(f).as_geojson(out)
			not_first? << _true
		_endloop
		wany("]","}")
	_endif
	wany("}")
_endmethod
$

